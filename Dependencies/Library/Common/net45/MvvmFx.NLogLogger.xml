<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvvmFx.NLogLogger</name>
    </assembly>
    <members>
        <member name="T:MvvmFx.NLogLogger.NLogLogger">
            <summary>
            NLog <see cref="T:MvvmFx.Logging.ILog"/> adapter.
            </summary>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmFx.NLogLogger.NLogLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Trace(System.String,System.Object[])">
            <summary>
            Reports a Trace message.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            A Trace message just shows the execution path.
            This log level shouldn't be used in production environment.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Debug(System.String,System.Object[])">
            <summary>
            Reports a Debug message.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            A Debug message reports successful processing or shows key variable values.
            This log level shouldn't be used in production environment.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Info(System.String,System.Object[])">
            <summary>
            Reports an information message.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            An information message is used to report harmless events like program start and stop.
            This log level is part of normal program log and can be used in production environment.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Warn(System.String,System.Object[])">
            <summary>
            Reports a warning message.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            A warning message reports an event that could be an error but was or can be recovered by the program. Example:<br />
            - the configuration file didn't supply a value but a default value was used;<br />
            - there was an error sending an email message but the program will retry later.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Error(System.String,System.Object[])">
            <summary>
            Reports an Error program condition.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            An Error message logs a serious error condition: an Exception
            or some essential program action didn't succeed.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Error(System.Exception)">
            <summary>
            Reports an Error program condition.
            </summary>
            <param name="exception">The Exception to report.</param>
            <remarks>
            An Error message logs a serious error condition: an Exception
            or some essential program action didn't succeed.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Fatal(System.String,System.Object[])">
            <summary>
            Reports a Fatal program condition.
            </summary>
            <param name="format">A formatted message.</param>
            <param name="args">Parameters to be injected into the formatted message.</param>
            <remarks>
            A Fatal message is issued just before the program execution stops.
            The error makes impossible to the program to do what it was supposed to do.
            </remarks>
        </member>
        <member name="M:MvvmFx.NLogLogger.NLogLogger.Fatal(System.Exception)">
            <summary>
            Reports a Fatal program condition.
            </summary>
            <param name="exception">The Exception to report.</param>
            <remarks>
            A Fatal message is issued just before the program execution stops.
            The error makes impossible to the program to do what it was supposed to do.
            </remarks>
        </member>
    </members>
</doc>
